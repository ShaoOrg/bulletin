# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      DEPLOY_ENV:
        description: "Select deployment environment"
        required: true
        default: "staging"
        type: choice
        options:
          - "staging"
          - "deploy"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: [ self-hosted ]
    if: ${{ github.event.inputs.DEPLOY_ENV == 'deploy' }}
    steps:
      - name: Set NODE_TLS_REJECT_UNAUTHORIZED to 0
        run: |
          echo "NODE_TLS_REJECT_UNAUTHORIZED=0" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      # - name: Build with Jekyll
      #   uses: Baosight/jekyll-build-pages@main
      #   with:
      #     source: ./
      #     destination: ./_site
      - name: Build documentation
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}
        run: |
          pushd ~ || exit 1
          [ -d github-python-sszorg-bulletin ] || {
            python3 -m venv github-python-sszorg-bulletin
          }
          source github-python-sszorg-bulletin/bin/activate
          popd || exit 1
          pwd
          ./generate_md.sh
          pip install mkdocs-material mkdocs-drawio-km jieba
          mkdocs build --clean
          mkdocs --version
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v2
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: [ self-hosted ]
    if: ${{ github.event.inputs.DEPLOY_ENV == 'deploy' }}
    needs: build
    steps:
      - name: Set NODE_TLS_REJECT_UNAUTHORIZED to 0
        run: |
          echo "NODE_TLS_REJECT_UNAUTHORIZED=0" >> $GITHUB_ENV
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
