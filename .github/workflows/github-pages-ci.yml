# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: GitHub Pages CI

on:
  workflow_call:
    inputs:
      DEPLOY_ENV:
        description: "Select deployment environment"
        required: true
        default: "staging"
        type: string
      COMBIND_REACT_DIST:
        description: "combind react build dist folder into mkdocs material"
        required: true
        default: false
        type: boolean
        # type: choice
        # options:
        #   - "staging"
        #   - "deploy"
  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:
  #   inputs:
  #     DEPLOY_ENV:
  #       description: "Select deployment environment"
  #       required: true
  #       default: "staging"
  #       type: choice
  #       options:
  #         - "staging"
  #         - "deploy"
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: [ self-hosted ]
    if: ${{ inputs.DEPLOY_ENV == 'deploy' }} || github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      DRAWIO_EDITOR_URL: https://de.vicp.net:25053
      KITY_MINDER_EDITOR_URL: https://de.vicp.net:25053
      # ASSETS_FOLDER: ${{ vars.GITHUB_REPOSITORY }}/main/docs/assets
    steps:
      - name: "Set environmental variables" # workaround for unsupported nest env var
        run: |
          echo "ASSETS_FOLDER=$GITHUB_REPOSITORY/main/docs/assets" >> $GITHUB_ENV
      - name: Print Env
        run: |
          env
      - name: Checkout
        uses: actions/checkout@v4
      # - name: Setup Pages
      #   uses: actions/configure-pages@v4
      - name: Build documentation
        shell: bash
        run: |
          pushd ~ || exit 1
          [ -d github-python-sszorg-bulletin ] || {
            python3 -m venv github-python-sszorg-bulletin
          }
          source github-python-sszorg-bulletin/bin/activate
          popd || exit 1
          pwd
          ./generate_md.sh $(pwd)
          pip install mkdocs-material jieba
          pip install mkdocs-drawio-km --upgrade
          mkdocs build --clean
          mkdocs --version
      - name: Build documentation
        shell: bash
        run: |
          # 检查 ACTIONS_CACHE_URL 是否存在
          if [[ -z "${ACTIONS_CACHE_URL:-}" ]]; then
            echo "ACTIONS_CACHE_URL is not set"
            exit 1
          fi

          echo "ACTIONS_CACHE_URL: $ACTIONS_CACHE_URL"

          # 使用 hostname 命令获取当前主机名
          HOSTNAME=$(hostname)
          echo "Current hostname: $HOSTNAME"

          # 解析 ACTIONS_CACHE_URL 中的 hostname 部分
          CACHE_HOST=$(echo "$ACTIONS_CACHE_URL" | sed -E 's#https?://([^:/]+).*#\1#')
          echo "Extracted cache host from ACTIONS_CACHE_URL: $CACHE_HOST"

          # 可选：检查是否能访问该主机的 443 端口（HTTPS）
          if command -v nc >/dev/null 2>&1; then
            echo "Checking connection to $CACHE_HOST:443..."
            nc -zv "$CACHE_HOST" 443
          else
            echo "nc command not found, skipping connectivity check"
          fi
      - name: Combine react build into mkdocs material download artifact firstly
        if: inputs.COMBIND_REACT_DIST == true
        uses: actions/cache/restore@v3
        with:
          key: react-
          path: dist
          lookup-only: false
      - name: Combine react build into mkdocs material
        if: inputs.COMBIND_REACT_DIST == true
        shell: bash
        run: |
          [ -d dist ] || exit 0
          rm -rf site/react-web
          cp -r dist/* site/react-web
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: site
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: [ self-hosted ]
  #   if: ${{ inputs.DEPLOY_ENV == 'deploy' }}|| github.event_name == 'push'
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v3
